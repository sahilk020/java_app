version: 0.2

env:
  variables:
    GITLAB_REPO_URL: "https://github.com/sahilk020/artemis-main-bp-admin.git"
    S3_BUCKET: "pereprod.sahiltest"
    AWS_REGION: "eu-central-1"
    CICD_RELEASES: "/opt/cicd-releases"
    COMPONENT_DIR: "pay10-pg-ws"
    BUILD_COMMAND: "clean bootWar -x test"

phases:
  install:
    commands:
      - echo "Attempting to install Java via Amazon Linux extras"
      - amazon-linux-extras install -y java-openjdk11 || {
          echo "Amazon Linux extras installation failed, downloading Java manually";
          curl -O https://download.java.net/java/GA/jdk8/latest/binaries/jdk-8u161-linux-x64.tar.gz;
          tar -xzf jdk-8u161-linux-x64.tar.gz;
          mv jdk1.8.0_161 /usr/local/;
          export JAVA_HOME=/usr/local/jdk1.8.0_161;
          export PATH=$JAVA_HOME/bin:$PATH;
          echo "Java installed from manual download";
        }
      - export JAVA_HOME=${JAVA_HOME:-/usr/lib/jvm/java-11-openjdk};  # Adjust for the Java version you install
      - export PATH=$JAVA_HOME/bin:$PATH
      - echo "JAVA_HOME set to $JAVA_HOME"
      - java -version

  pre_build:
    commands:
      - echo "Cloning the repository"
      - git clone $GITLAB_REPO_URL /opt/code

  build:
    commands:
      - echo "Building the project"
      - cd /opt/code/$COMPONENT_DIR
      - chmod +x gradlew
      - ./gradlew $BUILD_COMMAND || { echo "Build failed. Checking for Java issues..."; echo "JAVA_HOME: $JAVA_HOME"; java -version; exit 1; }

  post_build:
    commands:
      - echo "Preparing to upload to S3"
      - mkdir -p ${CICD_RELEASES}/$(date +"%Y%m%d_%H%M%S")
      - mv build/libs/*.war ${CICD_RELEASES}/$(date +"%Y%m%d_%H%M%S")/ || echo "No WAR files found, skipping upload."

artifacts:
  files:
    - ${CICD_RELEASES}/*
