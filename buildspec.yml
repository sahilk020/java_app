version: 0.2


env:  
  variables:
    GITLAB_REPO_URL: "https://github.com/sahilk020/java_app.git"
    S3_BUCKET: "pereprod.sahiltest"                        # Your S3 bucket name
    AWS_REGION: "eu-central-1"     # Your AWS region
    DATE_TIME: "default_value"                    
phases:
  install:
    commands:
      - echo "Installing necessary dependencies"
      - yum install -y git  
      - echo "Set Date And Time"
      - DATE_TIME=$(TZ='Asia/Kolkata' date +"%Y%m%d_%H%M%S")
      - export DATE_TIME 
      - sudo apt update
      - sudo apt install java
      - java -version
      - sudo apt -y install wget
      - wget https://archive.apache.org/dist/tomcat/tomcat-10/v10.0.23/bin/apache-tomcat-10.0.23.tar.gz 
      - tar -xvf apache-tomcat-10*.tar.gz
      - sudo mv apache-tomcat-10.0.23 /opt/tomcat
                                      
  pre_build:
    commands:
      - echo "Using branch ${GIT_BRANCH}"
      - echo "Using components ${COMPONENT}"
      - echo "Cloning repository from branch ${GIT_BRANCH}"
      - git clone https://github.com/sahilk020/java_app.git
      - ls -la
      - echo "Ready to deploy components"
      - mkdir /opt/warfile
  build:
    commands:
      - |
        echo "Setting JAVA_HOME"
        export JAVA_HOME=/usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64

        IFS=',' read -ra COMPONENTS <<< "$COMPONENT"
        for component in "${COMPONENTS[@]}"; do
          echo "Building component: $component"
          if [[ "$component" == "crm" ]]; then
            cd pay10-crm
            chmod +x gradlew
            ./gradlew clean build -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "crypto" ]]; then
            cd pay10-crypto
            chmod +x gradlew
            ./gradlew clean bootWar -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "bindb" ]]; then
            cd pay10-bindb
            chmod +x gradlew
            ./gradlew clean build -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "pgui" ]]; then
            cd pay10-pg-ui
            chmod +x gradlew
            ./gradlew clean bootWar -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "email" ]]; then
            cd pay10-notification-email
            chmod +x gradlew
            ./gradlew clean bootWar -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "sms" ]]; then
            cd pay10-notification-sms
            chmod +x gradlew
            ./gradlew clean bootWar -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "batch" ]]; then
            cd pay10-batchProcessor
            chmod +x gradlew
            ./gradlew clean build -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "pgws" ]]; then
            cd pay10-pg-ws
            chmod +x gradlew
            ./gradlew clean bootWar -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "crmws" ]]; then
            cd pay10-crm-ws
            chmod +x gradlew
            ./gradlew clean build -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "mobile" ]]; then
            cd pay10-mobile
            chmod +x gradlew
            ./gradlew clean bootWar -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          elif [[ "$component" == "si" ]]; then
            cd pay10-SI
            chmod +x gradlew
            ./gradlew clean build -x test
            cp build/libs/*.war  /opt/warfile
            cd ..
          else
            echo "Unknown component: $component"
            exit 1
          fi
          echo "Build for $component completed"
        done


  post_build:
    commands:
      - echo "Checking for generated WAR files..."
      - ls -l /opt/warfile/  # Verify the WAR files
      - echo "Copying WAR files to S3..."
      #- aws s3 cp /opt/warfile/*.war s3://pay10/war-file-store/cicd-releases/${DATE_TIME}/
      - aws s3 cp /opt/warfile/ s3://pereprod.sahiltest/war-file-store/cicd-releases/${DATE_TIME}/ --recursive --exclude "*" --include "*.war" 
      

artifacts:
  files:
    - /opt/deployment-artifact/*
    - /opt/code/codedeploy-files/appspec.yml   # Explicitly include appspec.yml
    - /opt/code/codedeploy-files/scripts/*     # Include any required scripts for deployment
  name: codeBuildArtifacts
  discard-paths: yes
