<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"

	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- <bean id="refundTicketingMultiThreaded"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${thread.size.corePool:10}" />
	</bean> -->
	
	<bean id="refundTicketingJobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<!-- <property name="taskExecutor" ref="refundTicketingMultiThreaded" /> -->
	</bean>
	
	<bean id="refundTicketingReaderListener" class="com.pay10.batch.commons.FileItemReaderListener" />

	<bean id="refundTicketingProcessorListener" class="com.pay10.batch.commons.FileItemProcessorListener" />

	<batch:job id="refundTicketingBatchJob">
		<batch:step id="refundTicketingBatchStep">
			<batch:tasklet>
				<batch:chunk reader="${refundTicketing.file.itemReaderTicketing:refundTicketingFlatFileItemReader}" writer="refundTicketingItemWriter"
					processor="refundTicketingItemProcessor" commit-interval="${refundTicketing.file.linesCommit:1}" 
						skip-limit="${exception.limit.ignore:15}" retry-limit="${exception.limit.retry:3}">
					<batch:skippable-exception-classes>
						<batch:include class="org.springframework.batch.item.file.FlatFileParseException" />
						<batch:include class="org.springframework.batch.item.ItemReaderException" />
						<batch:include class="java.lang.IllegalStateException" />
						<batch:include class="com.pay10.batch.exception.SystemException" />
						<batch:include class="com.pay10.batch.exception.DatabaseException" />
					</batch:skippable-exception-classes>
					<batch:retryable-exception-classes>
					    <batch:include class="com.pay10.batch.exception.DatabaseException" />
					</batch:retryable-exception-classes>
					
					<batch:listeners>
						<batch:listener ref="refundTicketingReaderListener" />
						<batch:listener ref="refundTicketingProcessorListener" />
					</batch:listeners>
				</batch:chunk>
			</batch:tasklet>
			<batch:next on="COMPLETED" to="refundTicketingSuccessFlowStep" />
			<batch:next on="FAILED" to="refundTicketingFailureFlowStep" />
		</batch:step>
		<batch:step id="refundTicketingSuccessFlowStep">
			<batch:tasklet ref="refundTicketingSuccessTask">
			</batch:tasklet>
		</batch:step>
		<batch:step id="refundTicketingFailureFlowStep">
			<batch:tasklet ref="refundTicketingFailureTask">
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="refundTicketingFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="resource" value="file:///#{jobParameters['input.file.name']}" />
		<property name="linesToSkip" value="${refundTicketing.file.skipLines:0}" />
		<property name= "encoding" value ="UTF-8"/>
		<property name="lineMapper">
			<bean class="com.pay10.batch.commons.FileRefundLineMapper">
			    <property name="fileParameter" value="${refundTicketingFileParameters}"/>
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="${refundTicketing.file.splitter:|}" />
						<property name="strict" value="true" />
						<property name="names" value="${refundTicketingFileParameters}" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="refundTicketingItemProcessor" class="com.pay10.batch.refundTicketing.RefundTicketingBatchProcessor" scope="prototype">
	<!-- 	<property name="fileValidator" ref="refundFileValidator" /> -->
	</bean>

	<bean id="refundTicketingItemWriter" class="com.pay10.batch.MongoDbWriter" />
	
	<!-- <bean id="refundFileValidator" class="com.pay10.batch.refund.RefundFileValidator" /> -->
	
	<bean id="refundTicketingSuccessTask" class="com.pay10.batch.commons.SuccessTaskExecutor">
		<property name="successDrive" value="${directory.path.success}" />
		<property name="fileLocker" ref="refundTicketingFileLocker" />
	</bean>
	<bean id="refundTicketingFailureTask" class="com.pay10.batch.commons.FailureTaskExecutor">
		<property name="errorDrive" value="${directory.path.error}" />
		<property name="fileLocker" ref="refundTicketingFileLocker" />
	</bean>

</beans>
