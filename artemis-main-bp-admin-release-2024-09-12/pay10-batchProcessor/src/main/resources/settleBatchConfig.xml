<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"

	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- <bean id="settleMultiThreaded"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${thread.size.corePool:1}" />
	</bean> -->

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher" >
		<property name="jobRepository" ref="jobRepository" />
		<!-- <property name="taskExecutor" ref="settleMultiThreaded" /> -->
	</bean>

	<bean id="settleReaderListener" class="com.pay10.batch.commons.FileItemReaderListener" />

	<bean id="settleProcessorListener" class="com.pay10.batch.commons.FileItemProcessorListener" />

	<batch:job id="settleBatchJob">
		<batch:step id="settleBatchStep" allow-start-if-complete="true">
			<batch:tasklet>
				<batch:chunk reader="${settle.file.itemReader:settleFlatFileItemReader}" writer="settleItemWriter"
					processor="settleItemProcessor" commit-interval="${settle.file.linesCommit:1}" 
						skip-limit="${exception.limit.ignore:15}" retry-limit="${exception.limit.retry:3}">
					<batch:skippable-exception-classes>
						<batch:include class="org.springframework.batch.item.file.FlatFileParseException" />
						<batch:include class="org.springframework.batch.item.ItemReaderException" />
						<batch:include class="java.lang.IllegalStateException" />
						<batch:include class="com.pay10.batch.exception.SystemException" />
						<batch:include class="com.pay10.batch.exception.DatabaseException" />
					</batch:skippable-exception-classes>
					<batch:retryable-exception-classes>
					    <batch:include class="com.pay10.batch.exception.DatabaseException" />
					</batch:retryable-exception-classes>
					
					<batch:listeners>
						<batch:listener ref="settleReaderListener" />
						<batch:listener ref="settleProcessorListener" />
					</batch:listeners>
				</batch:chunk>
			</batch:tasklet>
			<batch:next on="COMPLETED" to="successFlowStep" />
			<batch:next on="FAILED" to="failureFlowStep" />
		</batch:step>
		<batch:step id="successFlowStep">
			<batch:tasklet ref="successTask">
			</batch:tasklet>
		</batch:step>
		<batch:step id="failureFlowStep">
			<batch:tasklet ref="failureTask">
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="settleFlatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step"> 
		<property name="resource" value="file:///#{jobParameters['input.file.name']}" />
		<property name="linesToSkip" value="${settle.file.skipLines:0}" />
		<property name= "encoding" value ="UTF-8"/>
		<property name="lineMapper">
			<bean class="com.pay10.batch.commons.FileLineMapper">
			    <property name="fileParameter" value="${settleFileParameters}"/>
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="${settle.file.splitter:|}" />
						<property name="strict" value="true" />
						<property name="names" value="${settleFileParameters}" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="settleItemProcessor" class="com.pay10.batch.recoSettle.SettleRecoBatchProcessor" scope="prototype">
		<property name="fileValidator" ref="settleFileValidator" />
	</bean>

	<bean id="settleItemWriter" class="com.pay10.batch.MongoDbWriter" />
	
	<bean id="settleFileValidator" class="com.pay10.batch.recoSettle.SettleRecoFileValidator" />

	<bean id="successTask" class="com.pay10.batch.commons.SuccessTaskExecutor">
		<property name="successDrive" value="${directory.path.success}" />
		<property name="fileLocker" ref="recoFileLocker" />
	</bean>
	<bean id="failureTask" class="com.pay10.batch.commons.FailureTaskExecutor">
		<property name="errorDrive" value="${directory.path.error}" />
		<property name="fileLocker" ref="recoFileLocker" />
	</bean>

</beans>
